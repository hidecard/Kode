{
  "basic": [
    { "question": "What is JavaScript?", "options": ["A programming language", "A markup language", "A styling language", "A database"], "correct": 0, "explanation": "JavaScript is a programming language used for web development." },
    { "question": "Which keyword is used to declare a variable in JavaScript?", "options": ["var", "int", "string", "declare"], "correct": 0, "explanation": "The 'var' keyword is used to declare variables in JavaScript." },
    { "question": "What does 'DOM' stand for?", "options": ["Document Object Model", "Data Object Model", "Dynamic Object Model", "Display Object Model"], "correct": 0, "explanation": "DOM stands for Document Object Model, which represents the HTML document as a tree structure." },
    { "question": "Which symbol is used for single-line comments in JavaScript?", "options": ["//", "/*", "#", "<!--"], "correct": 0, "explanation": "Double slashes (//) are used for single-line comments in JavaScript." },
    { "question": "What is the correct way to write an array in JavaScript?", "options": ["var arr = [1, 2, 3]", "var arr = (1, 2, 3)", "var arr = {1, 2, 3}", "var arr = <1, 2, 3>"], "correct": 0, "explanation": "Arrays in JavaScript are created using square brackets []." },
    { "question": "Which method is used to add an element to the end of an array?", "options": ["push()", "add()", "append()", "insert()"], "correct": 0, "explanation": "The push() method adds one or more elements to the end of an array." },
    { "question": "What does the '===' operator do in JavaScript?", "options": ["Strict equality comparison", "Assignment", "Loose equality", "Not equal"], "correct": 0, "explanation": "'===' checks for both value and type equality (strict comparison)." },
    { "question": "Which function is used to parse a string to an integer?", "options": ["parseInt()", "parseFloat()", "toString()", "Number()"], "correct": 0, "explanation": "parseInt() parses a string and returns an integer." },
    { "question": "What is a closure in JavaScript?", "options": ["A function with access to its outer scope", "A way to close browser windows", "A type of loop", "A CSS property"], "correct": 0, "explanation": "A closure is a function that has access to variables in its outer (enclosing) scope." },
    { "question": "Which keyword is used to define a constant in JavaScript?", "options": ["const", "constant", "let", "var"], "correct": 0, "explanation": "The 'const' keyword is used to declare constants in JavaScript." }
  ],
  "intermediate": [
    { "question": "What is the purpose of the 'this' keyword in JavaScript?", "options": ["Refers to the current object", "Creates a new object", "Ends a function", "Declares a variable"], "correct": 0, "explanation": "'this' refers to the object that is executing the current function." },
    { "question": "Which method is used to remove the last element from an array?", "options": ["pop()", "remove()", "delete()", "splice()"], "correct": 0, "explanation": "The pop() method removes the last element from an array and returns it." },
    { "question": "What does JSON stand for?", "options": ["JavaScript Object Notation", "JavaScript Online Network", "Java Serialized Object Notation", "JavaScript Object Network"], "correct": 0, "explanation": "JSON stands for JavaScript Object Notation, a lightweight data interchange format." },
    { "question": "Which of the following is NOT a JavaScript data type?", "options": ["float", "string", "boolean", "undefined"], "correct": 0, "explanation": "JavaScript has number, string, boolean, undefined, null, object, and symbol types. 'float' is not a separate type." },
    { "question": "What is the correct syntax for an arrow function?", "options": ["const func = () => {}", "const func = function() {}", "function func() {}", "const func = => {}"], "correct": 0, "explanation": "Arrow functions use the syntax: (parameters) => { statements }" },
    { "question": "Which method is used to select an element by its ID?", "options": ["getElementById()", "querySelector()", "getElementsByClassName()", "getElementsByTagName()"], "correct": 0, "explanation": "getElementById() selects an element by its ID attribute." },
    { "question": "What is event bubbling?", "options": ["Events propagate from child to parent elements", "Events propagate from parent to child elements", "Events stop at the target element", "Events are captured before bubbling"], "correct": 0, "explanation": "Event bubbling means that when an event occurs on an element, it first runs the handlers on it, then on its parent, then all the way up." },
    { "question": "Which operator is used for optional chaining?", "options": ["?.", "??", "&&", "||"], "correct": 0, "explanation": "The optional chaining operator (?.) allows reading the value of a property located deep within a chain of connected objects without having to check that each reference in the chain is valid." },
    { "question": "What does the 'async' keyword do?", "options": ["Makes a function return a Promise", "Makes code run synchronously", "Creates a new thread", "Handles errors"], "correct": 0, "explanation": "The 'async' keyword declares an asynchronous function that returns a Promise." },
    { "question": "Which method is used to convert a JSON string to a JavaScript object?", "options": ["JSON.parse()", "JSON.stringify()", "JSON.convert()", "JSON.object()"], "correct": 0, "explanation": "JSON.parse() parses a JSON string and returns a JavaScript object." }
  ],
  "advanced": [
